name: Build
on: push

jobs:
  fmt_clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build assets
        run: ./scripts/build-assets.bash
      - name: Lint (rustfmt)
        run: cargo fmt -- --check
      - name: Lint (clippy)
        run: cargo clippy --all-targets --all-features

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, pretty: x86_64 }
          - { target: arm-unknown-linux-gnueabihf, pretty: armv6l }
          - { target: armv7-unknown-linux-gnueabihf, pretty: armv7l }
          - { target: aarch64-unknown-linux-gnu, pretty: aarch64 }
          - { target: riscv64gc-unknown-linux-gnu, pretty: riscv64 }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.job.pretty }}-${{ steps.toolchain.outputs.cachekey }}
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Build assets
        run: ./scripts/build-assets.bash
      - name: Build DietPi-Dashboard
        run: cross build --release --target ${{ matrix.job.target }}
      - name: Upload frontend binary
        uses: actions/upload-artifact@v4
        with:
          name: dietpi-dashboard-${{ matrix.job.pretty }}-frontend
          path: target/${{ matrix.job.target }}/release/server
      - name: Upload backend binary
        uses: actions/upload-artifact@v4
        with:
          name: dietpi-dashboard-${{ matrix.job.pretty }}-backend
          path: target/${{ matrix.job.target }}/release/backend
